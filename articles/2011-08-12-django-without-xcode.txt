--- 
title: Django without Xcode
tags: Django, Python, HomeBrew
date: 12/08/2011

It's ridiculous that Mac's users have to download and install XCode just to properly install and setup Python and Django development environment. Below are the steps that you can follow to get environment for Django up and running in no time without XCode.

~

The environment will contain -

* Python 2.7
* Django 1.3
* Git
* HomeBrew - a package manager for Mac OSX that allow you to install UNIX tools.
* GCC Package Installer - XCode replacement
* Pip - Package install for Python
* PIL - Python Imaging Library
* Virtualenv - virtual environment for Python


### Installing HomeBrew

Copy and paste following codes inside the terminal right after the "$" sign.

	:::term
	/usr/bin/ruby -e "$(curl -fsSL https://raw.github.com/gist/323731)"

Now you will have working installation of Homebrew. To test it out type 

	:::term
	brew

in your terminal. If you see the list of example usage, your HomeBrew installation is a success.

### GCC Package Installer

If you have XCode installed on your system, then ignore this step.

Download and install -

For OS X 10.7 Lion: [https://github.com/downloads/kennethreitz/osx-gcc-installer/GCC-10.7.pkg](https://github.com/downloads/kennethreitz/osx-gcc-installer/GCC-10.7.pkg)  
For OS X 10.6 Snow Leopard: [https://github.com/downloads/kennethreitz/osx-gcc-installer/GCC-10.6.pkg](https://github.com/downloads/kennethreitz/osx-gcc-installer/GCC-10.6.pkg)

### Installing Git

Just run following command in your terminal.

	:::term
	brew install git
	
### Installing Python

Run the command

	:::term
	brew install readline sqlite gdbm
	
after completion, run following command

	:::term
	brew install python --universal --framework
	
### Installing Pip

Pip allows you to manage and install Python packages.
Run the following command in your terminal.

	:::term
	brew install pip
	
### Installing Virtualenv

Virtualenv allow you to have isolated Python environments for development. Run following command -

	:::term
	pip install virtualenv
	
### Creating Virtualenv

To create the isolated environment to install and run Django, run following command to start a new virtual environment -

	:::term
	virtualenv environment_name --no-sitepackages
	
Change the "environment_name" to whatever name you want to set. Then run following two commands to activate virtualenv -

	:::term
	cd environment_name
	source bin/activate
	
Again, replace the "environment_name" with the one you created above.

### Installing Django

Run following command to install Django -

	:::term
	pip install django
	
You now have a fully working environment for Django development. If you want MySQL support as well, run following two commands to install MySQL server and MySQL-python

	:::term
	brew install mysql
	pip install http://downloads.sourceforge.net/project/mysql-python/mysql-python-test/1.2.3c1/MySQL-python-1.2.3c1.tar.gz?use_mirror=cdnetworks-us-2
	
### Installing PIL

Just run following command to install PIL

	:::term
	pip install PIL
	
	
### Starting Django Project

First of all, create a directory where you want your Django project to be in E.g.

	:::term
	mkdir ~/myproject
	cd ~/myproject

Browse to your project directory from command line and activate your virtualenv if it hasn't

	:::term
	source environment_name/bin/activate

Remember to replace "environment_name" with the one you created. Once your virtualenv has been activated, run following command to start your Django project

	:::term
	django-admin.py startproject project_name
	
Replace the "project_name" with your own and you are good to start developing your Django apps.
